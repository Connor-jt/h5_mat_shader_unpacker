/*
; CONTENT AUTOGENERATED BY CODENAME ATRIOX: PLUGIN CONVERTOR (lord zedd edition)
; CONVERTOR VERSION: Zedd_0.4.1
; SOURCE TIMESTAMP: [EXAMPLE]
; SOURCE GAME VERSION: [EXAMPLE]
; SOURCE PLUGIN: (0014)ShaderByteCodeResourceSchema
; GENERATED TIMESTAMP: 30/10/2023 -> 7:30:13 PM
; manually edited: 30/10/2023 -> 9:19 PM
*/

#include "commons.h"
#pragma pack(push, 1)

struct __dx11_constant_table__ {
    struct __constants_ {
        enum __parameter_group_ : uint8_t {
            unknown = 0,
            _globals = 1,
            material_parameters = 2,
            skinning = 3,
        };
        enum __parameter_type_ : uint8_t {
            _float = 0,
            _int = 1,
            _bool = 2,
            _texture = 3,
        };
        uint32_t constant_name_;
        uint16_t buffer_offset_;
        uint16_t buffer_size_;
        __parameter_group_ parameter_group_;
        __parameter_type_ parameter_type_;
        uint8_t qersaui[2];
    };
    _s_tagblock<__constants_> constants_;
};
struct __base_compiled_shader {
    _s_data dx11_compiled_shader____dx11_compiled_shader_;
    __dx11_constant_table__ dx11_constant_table__;
};
struct __shader_hashes_ {
    int32_t hash_;
};

struct _0014_ShaderByteCodeResourceSchema{

   struct __geometry_shaders_bytecode_{
      struct __shader_passes_{
         int32_t stream_out_stride_0_;
         _s_data semantic_name_;
         int32_t semantic_index_;
         int8_t start_component_;
         int8_t component_count_;
         int8_t output_slot_;
         uint8_t JSGHFS[1];
      };
      __base_compiled_shader base_compiled_shader;
      _s_tagblock<__shader_passes_> shader_passes_;
      int32_t stream_out_stride_0_;
      int32_t stream_out_stride_1_;
      int32_t stream_out_stride_2_;
      int32_t stream_out_stride_3_;
      uint8_t pad_tp[4];
   };
   struct __compute_shaders_bytecode_{
      __base_compiled_shader base_compiled_shader;
      int32_t thread_group_size_X_;
      int32_t thread_group_size_Y_;
      int32_t thread_group_size_Z_;
      int32_t thread_count_;
   };
   _s_tagblock<__base_compiled_shader> vertex_shaders_bytecode_;
   _s_tagblock<__base_compiled_shader> pixel_shaders_bytecode_;
   _s_tagblock<__geometry_shaders_bytecode_> geometry_shaders_bytecode_;
   _s_tagblock<__compute_shaders_bytecode_> compute_shaders_bytecode_;
   _s_tagblock<__base_compiled_shader> hull_shaders_bytecode_;
   _s_tagblock<__base_compiled_shader> domain_shaders_bytecode_;
   _s_tagblock<__shader_hashes_> vertex_shader_hashes_;
   _s_tagblock<__shader_hashes_> pixel_shader_hashes_;
   _s_tagblock<__shader_hashes_> geometry_shader_hashes_;
   _s_tagblock<__shader_hashes_> compute_shader_hashes_;
   _s_tagblock<__shader_hashes_> hull_shader_hashes_;
   _s_tagblock<__shader_hashes_> domain_shader_hashes_;
};
#pragma pack(pop)
